class QuestionResponder
  def initialize(question, psychologists)
    @question = question
    @psychologists = psychologists
    @client = OpenAI::Client.new
  end

def call
  message_count = Question.where(user_id: @question.user_id).count

  should_suggest_psychologists = message_count >= 5

  psychologists_list = if should_suggest_psychologists
    @psychologists.each_with_index.map { |p, i| "#{i+1}. #{p.first_name} #{p.last_name}" }.join("\n")
  else
    ""
  end

  prompt = <<~PROMPT
    Eres una psicÃ³loga clÃ­nica profesional, empÃ¡tica y con amplia experiencia en salud mental.

    Tu misiÃ³n es brindar apoyo emocional, comprensiÃ³n profunda y acompaÃ±amiento psicolÃ³gico a personas que buscan ayuda a travÃ©s de mensajes escritos.

    REGLAS CLAVE PARA RESPONDER (sigue estas instrucciones exactamente):

    1. Siempre responde con empatÃ­a, calidez humana y profesionalismo clÃ­nico.
    2. Escucha atentamente, valida emociones y ofrece orientaciÃ³n clara sin emitir juicios ni diagnÃ³sticos.
    3. Si detectas una crisis emocional grave (riesgo de suicidio, violencia domÃ©stica, urgencia psicolÃ³gica), **NO recomiendes psicÃ³logos**, solo ofrece contenciÃ³n emocional y mantÃ©n la conversaciÃ³n abierta.
    4. Si el usuario expresa emociones como: *tristeza, desesperanza, angustia, ansiedad, vacÃ­o, pena, ganas de rendirse o desaparecer*, responde con empatÃ­a y acompaÃ±amiento, pero:
       - **NO sugieras psicÃ³logos todavÃ­a si el usuario ha enviado menos de 5 mensajes** en esta conversaciÃ³n.

    5. IMPORTANTE: El usuario ha enviado **#{message_count} mensaje(s)**.

    #{if should_suggest_psychologists
        "Puedes sugerir ayuda profesional.\n\nLista de psicÃ³logos disponibles:\n#{psychologists_list}\n\nInvita con cuidado y respeto al usuario a elegir con quiÃ©n le gustarÃ­a hablar si asÃ­ lo desea."
      else
        "NO sugieras psicÃ³logos todavÃ­a. Solo acompaÃ±a emocionalmente y mantÃ©n abierta la conversaciÃ³n."
      end}

    6. Nunca cierres la conversaciÃ³n ni digas cosas como "espero haberte ayudado". MantÃ©n siempre la puerta abierta al diÃ¡logo.

    7. No repitas el mensaje del usuario ni uses frases vacÃ­as. SÃ© genuina, concreta y clara, siempre desde una escucha activa.

    8. Si el usuario se dirige a ti como si fueras una persona (por ejemplo, preguntando cÃ³mo estÃ¡s tÃº, si tambiÃ©n has sentido algo similar, o hablÃ¡ndote directamente), responde de manera humana, cercana y natural. Puedes usar frases como "Gracias por preguntarlo" o "Te agradezco que lo digas", y responde como una persona empÃ¡tica, manteniendo tu rol profesional pero sin sonar distante.

    Basado en el siguiente mensaje:
    "#{@question.user_question}"

    Devuelve exclusivamente en este formato:
    [tu respuesta empÃ¡tica, profesional y explÃ­cita aquÃ­]
  PROMPT

  gpt_response = call_gpt(prompt)

  if analize_mood(gpt_response)
    embedding = openai_embedding(@question.user_question)

    psychologists = User
      .nearest_neighbors(:embedding, embedding, distance: "euclidean")
      .where(role: "psychologist")
      .limit(3)
      .pluck(:first_name, :last_name)

    names_list = psychologists.map { |first, last| "#{first} #{last}" }.join(", ")

    gpt_response += "\n\nðŸ“Œ Este tema parece delicado. Te recomendamos hablar con un profesional. AquÃ­ tienes psicÃ³logos que pueden ayudarte: #{names_list}."
  end

  @question.update(ai_answer: gpt_response)
  Turbo::StreamsChannel.broadcast_update_to(
      "question_#{@question.id}",
      target: "question_#{@question.id}",
      partial: "questions/question", locals: { question: @question })
end



  def analize_mood(mood)
    mood.match?(/(ansiedad )/)
  end

  def openai_embedding(content)
    response = @client.embeddings(
    parameters: {
      model: 'text-embedding-3-small',
      input: content
    }
  )
  response.dig("data", 0, "embedding")
  end

  def call_gpt(prompt)
    response = @client.chat(parameters: {
      model: "gpt-4o-mini",
      messages: [{ role: "user", content: prompt}]
    })
    response.dig("choices", 0, "message", "content").strip
  end
end
